...........................................FFFFFFF..............................................................FFFFFFF...................

Failures:
  1) UsersController DELETE destroy as non-admin user should protect the action
     Failure/Error: response.should redirect_to(@user)
     Expected response to be a redirect to <http://test.host/users/1> but was a redirect to <http://test.host/users>.
     # ./spec/controllers/users_controller_spec.rb:311

  2) UsersController GET editpassword assigns the requested user as @user
     Failure/Error: assigns(:user).should be(mock_user)
     
     expected #<User:70266954512200> => #<User:0x3fe84cdcf748 @name="User_1001">
          got #<NilClass:4> => nil
     
     Compared using equal?, which compares object identity,
     but expected and actual are not the same object. Use
     'actual.should == expected' if you don't care about
     object identity in this example.
     # ./spec/controllers/users_controller_spec.rb:320

  3) UsersController PUT updatepassword with valid params updates the requested user
     Failure/Error: User.should_receive(:find).with("37") { mock_user }
     (<User(id: integer, first_name: string, last_name: string, email: string, phone: string, encrypted_password: string, display_name: string, member: boolean, coordinator: boolean, farmer: boolean, admin: boolean, created_at: datetime, updated_at: datetime, salt: string) (class)>).find("37")
         expected: 1 time
         received: 0 times
     # ./spec/controllers/users_controller_spec.rb:328

  4) UsersController PUT updatepassword with valid params assigns the requested user as @user
     Failure/Error: assigns(:user).should be(mock_user)
     
     expected #<User:70266954290840> => #<User:0x3fe84cd99698 @name="User_1003">
          got #<NilClass:4> => nil
     
     Compared using equal?, which compares object identity,
     but expected and actual are not the same object. Use
     'actual.should == expected' if you don't care about
     object identity in this example.
     # ./spec/controllers/users_controller_spec.rb:336

  5) UsersController PUT updatepassword with valid params redirects to the user
     Failure/Error: response.should redirect_to(user_url(mock_user))
     Expected response to be a redirect to <http://test.host/users/1004> but was a redirect to <http://test.host/login>.
     # ./spec/controllers/users_controller_spec.rb:342

  6) UsersController PUT updatepassword with invalid params assigns the user as @user
     Failure/Error: assigns(:user).should be(mock_user)
     
     expected #<User:70266954125900> => #<User:0x3fe84cd7124c @name="User_1005">
          got #<NilClass:4> => nil
     
     Compared using equal?, which compares object identity,
     but expected and actual are not the same object. Use
     'actual.should == expected' if you don't care about
     object identity in this example.
     # ./spec/controllers/users_controller_spec.rb:350

  7) UsersController PUT updatepassword with invalid params re-renders the 'editpassword' template
     Failure/Error: response.should render_template("editpassword")
     expecting <"editpassword"> but rendering with <"">
     # ./spec/controllers/users_controller_spec.rb:356

  8) UsersController DELETE destroy as non-admin user should protect the action
     Failure/Error: response.should redirect_to(@user)
     Expected response to be a redirect to <http://test.host/users/1> but was a redirect to <http://test.host/users>.
     # ./spec/controllers/users_controller_spec.rb:311

  9) UsersController GET editpassword assigns the requested user as @user
     Failure/Error: assigns(:user).should be(mock_user)
     
     expected #<User:70266954272260> => #<User:0x3fe84cd94e04 @name="User_1006">
          got #<NilClass:4> => nil
     
     Compared using equal?, which compares object identity,
     but expected and actual are not the same object. Use
     'actual.should == expected' if you don't care about
     object identity in this example.
     # ./spec/controllers/users_controller_spec.rb:320

  10) UsersController PUT updatepassword with valid params updates the requested user
     Failure/Error: User.should_receive(:find).with("37") { mock_user }
     (<User(id: integer, first_name: string, last_name: string, email: string, phone: string, encrypted_password: string, display_name: string, member: boolean, coordinator: boolean, farmer: boolean, admin: boolean, created_at: datetime, updated_at: datetime, salt: string) (class)>).find("37")
         expected: 1 time
         received: 0 times
     # ./spec/controllers/users_controller_spec.rb:328

  11) UsersController PUT updatepassword with valid params assigns the requested user as @user
     Failure/Error: assigns(:user).should be(mock_user)
     
     expected #<User:70266954106060> => #<User:0x3fe84cd6c4cc @name="User_1008">
          got #<NilClass:4> => nil
     
     Compared using equal?, which compares object identity,
     but expected and actual are not the same object. Use
     'actual.should == expected' if you don't care about
     object identity in this example.
     # ./spec/controllers/users_controller_spec.rb:336

  12) UsersController PUT updatepassword with valid params redirects to the user
     Failure/Error: response.should redirect_to(user_url(mock_user))
     Expected response to be a redirect to <http://test.host/users/1009> but was a redirect to <http://test.host/login>.
     # ./spec/controllers/users_controller_spec.rb:342

  13) UsersController PUT updatepassword with invalid params assigns the user as @user
     Failure/Error: assigns(:user).should be(mock_user)
     
     expected #<User:70266953925800> => #<User:0x3fe84cd404a8 @name="User_1010">
          got #<NilClass:4> => nil
     
     Compared using equal?, which compares object identity,
     but expected and actual are not the same object. Use
     'actual.should == expected' if you don't care about
     object identity in this example.
     # ./spec/controllers/users_controller_spec.rb:350

  14) UsersController PUT updatepassword with invalid params re-renders the 'editpassword' template
     Failure/Error: response.should render_template("editpassword")
     expecting <"editpassword"> but rendering with <"">
     # ./spec/controllers/users_controller_spec.rb:356

Finished in 2.38 seconds
138 examples, 14 failures
